{"version":3,"sources":["components/Header.js","components/Scoreboard.js","components/Colors.js","components/Card.js","components/ColorsGrid.js","components/TryAgainButton.js","App.js","index.js"],"names":["Header","Scoreboard","props","className","currentScore","highScore","colorArray","name","hex","get10RandomColors","result","i","length","j","Math","floor","random","slice","Card","onClick","handleClick","style","boxShadow","colors","backgroundColor","border","invert","color","ColorsGrid","coloredCards","arrayOfColours","map","item","uuidv4","TryAgainButton","handleTryAgain","App","useState","setArrayOfColours","setCurrentScore","setHighScore","usedValues","setUsedValues","gameOver","setGameOver","console","log","conditionalReturn","event","newColor","target","firstChild","innerText","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c817cbf7.chunk.js","sourcesContent":["import \"../styles/Header.css\";\r\n\r\nconst Header = () => {\r\n//   console.log(\"Header component rendered...\");\r\n  return <header>MEMO GAME for The Odin Project</header>;\r\n};\r\n\r\nexport default Header;\r\n","import \"../styles/Scoreboard.css\";\r\n\r\nconst Scoreboard = (props) => {\r\n  // console.log(\"Scoreboard component rendered...\");\r\n\r\n  return (\r\n    <div className=\"scoreboard\">\r\n      <div>Current score: {props.currentScore}</div>\r\n      <div>High score: {props.highScore}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n","const colorArray = [\r\n  {\r\n    name: \"Red\",\r\n    hex: \"#e6194B\",\r\n  },\r\n  {\r\n    name: \"Green\",\r\n    hex: \"#3cb44b\",\r\n  },\r\n  {\r\n    name: \"Yellow\",\r\n    hex: \"#ffe119\",\r\n  },\r\n  {\r\n    name: \"Blue\",\r\n    hex: \"#4363d8\",\r\n  },\r\n  {\r\n    name: \"Orange\",\r\n    hex: \"#f58231\",\r\n  },\r\n  {\r\n    name: \"Purple\",\r\n    hex: \"#911eb4\",\r\n  },\r\n  {\r\n    name: \"Cyan\",\r\n    hex: \"#42d4f4\",\r\n  },\r\n  {\r\n    name: \"Magenta\",\r\n    hex: \"#f032e6\",\r\n  },\r\n  {\r\n    name: \"Lime\",\r\n    hex: \"#bfef45\",\r\n  },\r\n  {\r\n    name: \"Pink\",\r\n    hex: \"#fabed4\",\r\n  },\r\n  {\r\n    name: \"Teal\",\r\n    hex: \"#469990\",\r\n  },\r\n  {\r\n    name: \"Lavender\",\r\n    hex: \"#dcbeff\",\r\n  },\r\n  {\r\n    name: \"Brown\",\r\n    hex: \"#9A6324\",\r\n  },\r\n  {\r\n    name: \"Beige\",\r\n    hex: \"#fffac8\",\r\n  },\r\n  {\r\n    name: \"Maroon\",\r\n    hex: \"#800000\",\r\n  },\r\n  {\r\n    name: \"Mint\",\r\n    hex: \"#aaffc3\",\r\n  },\r\n  {\r\n    name: \"Olive\",\r\n    hex: \"#808000\",\r\n  },\r\n  {\r\n    name: \"Apricot\",\r\n    hex: \"#ffd8b1\",\r\n  },\r\n  {\r\n    name: \"Navy\",\r\n    hex: \"#000075\",\r\n  },\r\n  {\r\n    name: \"Black\",\r\n    hex: \"#000000\",\r\n  },\r\n];\r\n\r\nconst get10RandomColors = () => {\r\n  const result = [...colorArray];\r\n  for (let i = result.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [result[i], result[j]] = [result[j], result[i]];\r\n  }\r\n  return result.slice(0, 10);\r\n};\r\n\r\nexport default get10RandomColors;\r\n","import React from \"react\";\r\nimport \"../styles/Card.css\";\r\nimport invert from \"invert-color\";\r\n\r\nconst Card = (props) => {\r\n\r\n  // console.log(\"Card component rendered...\");\r\n\r\n  return (\r\n    <div\r\n      onClick={props.handleClick}\r\n      className=\"card\"\r\n      style={{\r\n        boxShadow: `0 0 7px 5px ${props.colors.hex}`,\r\n        backgroundColor: `${props.colors.hex}`,\r\n        border: `3px solid ${invert(props.colors.hex)}`\r\n      }}\r\n    >\r\n      <p style={{ color: `${invert(props.colors.hex)}` }}>\r\n        {props.colors.name}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import \"../styles/ColorsGrid.css\";\r\nimport Card from \"./Card\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ColorsGrid = (props) => {\r\n\r\n  // console.log(\"ColorsGrid component rendered...\");\r\n\r\n  const coloredCards = props.arrayOfColours.map((item) => {\r\n    return (\r\n      <Card handleClick={props.handleClick} colors={item} key={uuidv4()} />\r\n    );\r\n  });\r\n  return <div className=\"colors-grid\">{coloredCards}</div>;\r\n};\r\n\r\nexport default ColorsGrid;\r\n","const TryAgainButton = (props) => {\r\n  // console.log(\"TryAgainButton component rendered...\");\r\n  return <button onClick={props.handleTryAgain}>Try again</button>;\r\n};\r\n\r\nexport default TryAgainButton;\r\n","import { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Scoreboard from \"./components/Scoreboard\";\r\nimport \"./styles/App.css\";\r\nimport get10RandomColors from \"./components/Colors\";\r\nimport ColorsGrid from \"./components/ColorsGrid\";\r\nimport TryAgainButton from \"./components/TryAgainButton\";\r\n\r\nexport const App = () => {\r\n  const [arrayOfColours, setArrayOfColours] = useState(get10RandomColors());\r\n  const [currentScore, setCurrentScore] = useState(0);\r\n  const [highScore, setHighScore] = useState(0);\r\n  const [usedValues, setUsedValues] = useState([]);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  console.log(\"App component rendered...\");\r\n\r\n  if (currentScore > highScore) {\r\n    setHighScore(currentScore);\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    const newColor = event.target.firstChild.innerText;\r\n    if (usedValues.includes(newColor)) {\r\n      setGameOver(true);\r\n    } else {\r\n      setCurrentScore((currentScore) => currentScore + 1);\r\n      setUsedValues((usedValues) => [...usedValues, newColor]);\r\n      setArrayOfColours(get10RandomColors());\r\n    }\r\n  };\r\n\r\n  const handleTryAgain = () => {\r\n    setUsedValues([]);\r\n    setCurrentScore(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  const conditionalReturn =\r\n    gameOver || currentScore === 15 ? (\r\n      <div className=\"result\">\r\n        <p>You {currentScore === 15 ? \"won\" : \"lost\"}. Try again!</p>\r\n        <TryAgainButton handleTryAgain={handleTryAgain} />\r\n      </div>\r\n    ) : (\r\n      <ColorsGrid handleClick={handleClick} arrayOfColours={arrayOfColours} />\r\n    );\r\n\r\n  return (\r\n    <main>\r\n      <Header />\r\n      <Scoreboard currentScore={currentScore} highScore={highScore} />\r\n      {conditionalReturn}\r\n    </main>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}